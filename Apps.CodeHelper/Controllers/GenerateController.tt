<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".txt" #>
<#@ assembly name="System.Core.dll" #>
<#@ assembly name="System.Data.dll" #>
<#@ assembly name="System.Data.DataSetExtensions.dll" #>
<#@ assembly name="System.Xml.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ include file="$(ProjectDir)DbHelper.tt"  #>
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由T4模板自动生成
//       生成时间 <#=DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")#> by CodingHeart
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using Apps.BLL;
using Apps.IBLL;
using Apps.Models;
using Apps.Models.Sys;
using Microsoft.Practices.Unity;
using Apps.Common;
using Apps.Locale;

namespace Apps.Web.Controllers
{
    public class <#=config.TableName#>Controller : BaseController
    {
        ValidationErrors errors = new ValidationErrors();

        /// <summary>
        /// 业务层注入
        /// </summary>
        [Dependency]
        public I<#=config.TableName#>BLL m_BLL { get; set; }

        // GET: /<#=config.TableName#>/
		/// <summary>
        /// 主页
        /// </summary>
        /// <returns>视图</returns>
		[SupportFilter]
        public ActionResult Index()
        {
			ViewBag.Perm = GetPermission();
            return View();
        }
        /// <summary>
        /// 获取列表
        /// </summary>
        /// <param name="pager">分页</param>
        /// <param name="queryStr">查询条件</param>
        /// <returns></returns>
        [HttpPost]
        [SupportFilter(ActionName = "Index")]
        public JsonResult GetList(GridPager pager,string queryStr)
        {
            List<<#=config.TableName#>Model> list = m_BLL.GetList(ref pager,queryStr);
            var json = new
            {
                total = pager.totalRows,
                rows = (from r in list
                        select new <#=config.TableName#>Model()
                        {
<# foreach(DbColumn column in DbHelper.GetDbColumns(config.ConnectionString, config.DbDatabase, config.TableName)){#>
							<#=column.ColumnName#> = r.<#=column.ColumnName#>,
<#}#>                            
                        }).ToArray()
            };
            return Json(json, JsonRequestBehavior.AllowGet);
        }

        #region 创建
        [SupportFilter]
        public ActionResult Create()
        {
			ViewBag.Perm = GetPermission();
            return View();
        }

        [HttpPost]
		[SupportFilter]
        public JsonResult Create(<#=config.TableName#>Model model)
        {
			model.Id = ResultHelper.NewId;
            model.CreateTime = ResultHelper.NowTime;
            model.CreatePerson = GetUserId();
            if (m_BLL.Create(ref errors,model))
            {
                LogHandler.WriteServiceLog(GetUserTrueName(), "Id:" + model.Id + ",Name:" + model.Name, Resource.Success, Resource.Create, "<#=config.TableName#>");
                return Json(JsonHandler.CreateMessage(1, Suggestion.InsertSucceed), JsonRequestBehavior.AllowGet);
            }
            else
            {
				string ErrorCol = errors.Error;
                LogHandler.WriteServiceLog(GetUserTrueName(), "Id:" + model.Id + ",Name:" + model.Name, Resource.Fail, Resource.Create, "<#=config.TableName#>");
                return Json(JsonHandler.CreateMessage(0, Resource.Create + Resource.Fail + ErrorCol), JsonRequestBehavior.AllowGet);
            }
        }
        #endregion

        #region 修改
	    [SupportFilter]
        public ActionResult Edit(string id)
        {
			ViewBag.Perm = GetPermission();
            <#=config.TableName#>Model entity = m_BLL.GetById(id);
            return View(entity);
        }

        [HttpPost]
		[SupportFilter]
        public JsonResult Edit(<#=config.TableName#>Model model)
        {
            if (m_BLL.Edit(ref errors,model))
            {
				LogHandler.WriteServiceLog(GetUserTrueName(), "Id" + model.Id + ",Name" + model.Name, Resource.Success, Resource.Edit, "<#=config.TableName#>");
                return Json(1, JsonRequestBehavior.AllowGet);
            }
            else
            {
				string ErrorCol = errors.Error;
                LogHandler.WriteServiceLog(GetUserTrueName(), "Id" + model.Id + ",Name" + model.Name + "," + ErrorCol, Resource.Fail, Resource.Create, "<#=config.TableName#>");
                return Json(0, JsonRequestBehavior.AllowGet);
            }

        }
        #endregion

        #region 详细
		[SupportFilter]
        public ActionResult Details(string id)
        {
            <#=config.TableName#>Model entity = m_BLL.GetById(id);
            return View(entity);
        }

        #endregion

        #region 删除
        [HttpPost]
		[SupportFilter]
        public JsonResult Delete(string id)
        {
            if (!string.IsNullOrWhiteSpace(id))
            {
                if (m_BLL.Delete(ref errors, id))
                {
					LogHandler.WriteServiceLog(GetUserTrueName(), "Ids:" + id, Resource.Success, Resource.Create, "<#=config.TableName#>");
                    return Json(new { type = 1, message = Resource.Delete + Resource.Success }, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    LogHandler.WriteServiceLog(GetUserTrueName(), "Id:" + id + "," + errors.Error, Resource.Fail, Resource.Create, "<#=config.TableName#>");
                    return Json(new { type = 0, message = Resource.Delete + Resource.Fail }, JsonRequestBehavior.AllowGet);
                }
            }
            else
            {
                return Json(new { type = 0, message = Resource.Delete + Resource.Fail }, JsonRequestBehavior.AllowGet);
            }
        }
        #endregion
    }
}
<#+
    public class config
    {
        public static readonly string ConnectionString="Data Source=.;Initial Catalog=AppsDB;User ID=sa;Password=123;";
        public static readonly string DbDatabase="AppsDB";
        public static readonly string TableName="SysUser";
        public static readonly string nameSpace="Apps.Sys";
    }
#>